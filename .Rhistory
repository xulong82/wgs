mod = stan_model("./simulation.stan")
setwd("~/Dropbox/GitHub/wgs/model")
mod = stan_model("./simulation.stan")
fit = optimizing(mod, hessian = T, algorithm = "LBFGS", data = dat)
(dat = list(N = N, y = y, g = g, prior = 0))
fit = optimizing(mod, hessian = T, algorithm = "LBFGS", data = dat)
se = sqrt(diag(solve(-fit$hessian)))["p"]
se
(x = c(fit$par, se = se))
t1 = seq(-15, 15, 0.1)
test = sapply(t1, function(t1) {
cat(t1)
dat = within(dat, { prior = t1 })
fit = optimizing(mod, hessian = T, algorithm = "LBFGS", data = dat)
se = sqrt(diag(solve(-fit$hessian)))["p"]
c(fit$par, se = se)
})
(test = as.data.frame(t(test))) %>% head
0.71 / 0.16
p(se)
t0 = x[1] / x[5]
t2 = test$p / test$se.p
plot(t1, t2, pch = 3, col = as.numeric(abs(t2) > abs(t0)) + 1)
abline(v = max(t1[abs(t2) < abs(t0)]))
abline(v = min(t1[abs(t2) < abs(t0)]))
legend("topleft", c("abs(t2) > abs(t0)", "abs(t2) < abs(t0)"), fill = c("red", "black"))
abline(h = t0)
plot(t1, t2, col = as.numeric(abs(t2) > abs(t1)) + 1)
abline(v = max(t1[abs(t2) > abs(t1)]), col = "red")
abline(v = min(t1[abs(t2) > abs(t1)]), col = "red")
x
t0
plot(t1, test$se.p, pch = 3, col = as.numeric(abs(t2) > abs(t0)) + 1)
legend("topleft", c("abs(t2) > abs(t0)", "abs(t2) < abs(t0)"), fill = c("red", "black"))
abline(h = x["se.p"])
plot(t1, test$t, pch = 3, col = as.numeric(abs(test$t) > t0) + 1)
t1[ abs(test$t) > t0 ]
plot(t1, test$t, pch = 3, col = as.numeric(abs(test$t) > t0) + 1)
t1[ abs(test$t) > t0 ]
plot(test$p)
plot(test$se.p)
abline(h = x[1])
plot(t1, test$t)
abline(0, 1)
test
head(test)
cor(g, y)
t0
plot(t1, test$p, pch = 3, col = as.numeric(abs(t2) > abs(t0)) + 1)
plot(t1, test$p, pch = 3, col = as.numeric(test$p > x[1]) + 1)
plot(t1, test$p, pch = 3, col = as.numeric(abs(test$p) > x[1]) + 1)
x[1]
x
t0 = x[2] / x[6]
t2 = test$p / test$se.p
plot(t1, t2, pch = 3, col = as.numeric(abs(t2) > abs(t0)) + 1)
plot(t1, test$p, pch = 3, col = as.numeric(abs(test$p) > x[2]) + 1)
x[2]
plot(t1, test$p, pch = 3, col = as.numeric(abs(test$p) > abs(x[2])) + 1)
plot(t1, test$p, pch = 3, col = as.numeric(abs(test$p) > abs(x[2])) + 1)
plot(t1, test$p, pch = 1, col = as.numeric(abs(test$p) > abs(x[2])) + 1)
plot(t1, test$p, pch = 2, col = as.numeric(abs(test$p) > abs(x[2])) + 1)
plot(t1, test$p, pch = 0, col = as.numeric(abs(test$p) > abs(x[2])) + 1)
plot(t1, test$se.p, pch = 3, col = as.numeric(abs(t2) > abs(t0)) + 1)
abline(h = x["se.p"])
plot(t1, test$p, pch = 1, col = as.numeric(abs(test$p) > abs(x[2])) + 1)
legend("topleft", c("abs(t2) > abs(t0)", "abs(t2) < abs(t0)"), fill = c("red", "black"))
abline(h = x["se.p"])
x
abline(h = x["p"])
plot(t1, test$p)
legend("topleft", c("abs(t2) > abs(t0)", "abs(t2) < abs(t0)"), fill = c("red", "black"))
abline(h = x["p"])
line(t1, test$se.p)
lines(t1, test$se.p)
plot(t1, test$se.p)
abline(h = x["se.p"])
plot(t1, t2)
abline(h = t0)
par(mfrow = c(3, 1))
plot(t1, test$p)
abline(h = x["p"])
plot(t1, test$se.p)
abline(h = x["se.p"])
plot(t1, t2)
abline(h = t0)
head(test)
test$pvalue = pnorm(abs(test$p), sd = test$se.p, lower.tail = F) * 2
par(mfrow = c(4, 1))
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Posterior Effect Size")
abline(h = x["p"])
plot(t1, test$p, xlab = "", ylab = "Posterior Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Posterior Effect Size")
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Posterior Effect Size")
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Posterior Standard Error of Effect Size")
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
x
p1 = pnrom(abs(x["p"]), sd = x["se.p"], lower.tail = F) * 2
p1 = pnorm(abs(x["p"]), sd = x["se.p"], lower.tail = F) * 2
p1
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
getwd()
pdf(file = "simulation.pdf", height = 8, weight = 3)
par(mfrow = c(4, 1))
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
dev.off()
pdf(file = "simulation.pdf", height = 8, width = 3)
par(mfrow = c(4, 1))
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
dev.off()
pdf(file = "simulation.pdf", height = 10, width = 3)
par(mfrow = c(4, 1))
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
dev.off()
par(mfrow = c(1, 1))
pdf(file = "simulation.pdf", height = 4, width = 6)
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
dev.off()
pdf(file = "simulation.pdf", height = 3, width = 5)
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
dev.off()
pdf(file = "simulation.pdf", height = 4, width = 5)
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value")
abline(h = p1)
dev.off()
plot(t1, t2, col = as.numeric(abs(t2) > abs(t1)) + 1)
plot(t1, t2, col = as.numeric(abs(t2) > abs(t1)) + 2)
plot(t1, t2, col = as.numeric(abs(t2) < abs(t1)) + 2)
plot(t1, test$p, col = as.numeric(test$p < t1) + 2
xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
plot(t1, test$p, col = as.numeric(test$p < t1) + 2,
xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
plot(t1, test$p, col = as.numeric(test$p > t1) + 2,
xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value",
col = as.numeric(test$pvalue > p1) + 2)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value",
col = as.numeric(test$pvalue < p1) + 2)
legend("topleft", c("Post P-value < P-value with flat prior", "Post P-value > P-value with flat prior"), fill = c("green", "red"))
pdf(file = "simulation.pdf", height = 4, width = 5)
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value",
col = as.numeric(test$pvalue < p1) + 2)
legend("topleft", c("Post P-value < P-value with flat prior", "Post P-value > P-value with flat prior"), fill = c("green", "red"))
abline(h = p1)
dev.off()
pdf(file = "simulation.pdf", height = 4, width = 5)
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value",
col = as.numeric(test$pvalue < p1) + 2)
legend("topleft", c("Decreased Post P-value", "Increased Post P-value"), fill = c("green", "red"))
abline(h = p1)
dev.off()
pdf(file = "simulation.pdf", height = 4, width = 6)
plot(t1, test$p, xlab = "Prior Standardized Effect Size", ylab = "Post Effect Size")
abline(h = x["p"])
plot(t1, test$se.p, xlab = "Prior Standardized Effect Size", ylab = "Post Standard Error of Effect Size")
abline(h = x["se.p"])
plot(t1, t2, xlab = "Prior Standardized Effect Size", ylab = "Post Standardized Effect Size")
abline(h = t0)
plot(t1, test$pvalue, xlab = "Prior Standardized Effect Size", ylab = "Post P-value",
col = as.numeric(test$pvalue < p1) + 2)
legend("topleft", c("Decreased Post P-value", "Increased Post P-value"), fill = c("green", "red"))
abline(h = p1)
dev.off()
setwd("~/Dropbox/GitHub/wgs")
load("./Manu/table1.rdt")
gwas = table1
gwas$Sign <- as.factor(sign(gwas$mean))
gwas$Type <- "NS"
gwas$Type[1:4] <- "S"
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
head(gwas)
gwas$MAF[gwas$MAF > 0.5] = 1 - gwas$MAF[gwas$MAF > 0.5]
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
pdf("./Manu/top1.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
# geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
geom_point(colour="grey50", size = 4) + geom_point(aes(colour = Sign))
head(gwas)
geom_point(data = gwas[gwas$Type == "S", ], colour="grey50", size = 4) + geom_point(aes(colour = Sign))
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
geom_point(data = gwas[1:4, ], colour="grey50", size = 4) +
scale_size(range = c(1, 8))
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="grey50", size = 4) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8))
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="yellow", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8))
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="yellow", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.9) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.9) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], fill = "white", colour="green", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8))
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], fill = "white", colour="green", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 8) +
geom_point(data = gwas[1:4, ], colour="red", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 8.1) +
geom_point(data = gwas[1:4, ], colour="red", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 8.5) +
geom_point(data = gwas[1:4, ], colour="red", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.8) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 9) +
geom_point(data = gwas[1:4, ], colour="red", size = 8) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 9, shape = 1)
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 9, shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 8, shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", size = 8, shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="yellow", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P))+ 0.2, shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()

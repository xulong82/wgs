sum(cons)
vep_p[vep_p$Consequence == "missense_variant", ]
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
head(vep_p)
vep_p$Distance
y = vep_p$Distance
y = y[! y == "-"]
y
cons
sort(cons / sum(cons), decreasing = T)
upstream <- filter(gwasTable, grepl("upstream", Consequence))
unique(upstream$UID)
vep_p[vep_p$UID %in% unique(upstream$UID), ]
y = vep_p[vep_p$UID %in% unique(upstream$UID), ]
y
y$Consequences
y$Consequence
sort(cons / sum(cons), decreasing = T)
sort(cons)
gwas = gwas4
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
unique(missense$UID)
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
intron <- filter(gwasTable, grepl("intron_variant", Consequence))
(intron_gene <- intron$Symbol %>% unique)
source("~/Dropbox/GitHub/X/function.R")
intron_gene_gk <- hsGK(intron_gene)
unique(intron$UID)
nrow(intron)
intron_gene
intron_gene_gk
options(stringsAsFactors = F)
gwascat <- read.delim("~/Dropbox/GitHub/glmm/GWAS_catelog/gwas_catalog_v1.0-downloaded_2015-07-22.tsv")
names(gwascat)
table(gwascat$DISEASE.TRAIT) %>% sort %>% tail
gwas_genes <- gwas$MAPPED_GENE %>% unique
gwas_genes
gwas_genes <- gwascat$MAPPED_GENE %>% unique
gwas_genes
gwas_genes <- lapply(gwas_genes, function(x) unlist(strsplit(x, ", ")))
gwas_genes <- lapply(gwas_genes, function(x) unlist(strsplit(x, " - ")))
gwas_genes <- unlist(gwas_genes) %>% unique
gwas_genes
(x = intersect(intron_genes, gwas_genes))
intron_genes
(x = intersect(intron_gene, gwas_genes))
y = lapply(gwas$MAPPED_GENE, function(x) unlist(strsplit(x, ", ")))
y = lapply(y, function(i) unlist(strsplit(i, " - ")))
idx = sapply(y, function(i) any(i %in% x))
gwas_select = gwas[idx, ]
gwas_select = gwascat[idx, ]
idx
(x = intersect(intron_gene, gwas_genes))
y = lapply(gwascat$MAPPED_GENE, function(x) unlist(strsplit(x, ", ")))
y = lapply(y, function(i) unlist(strsplit(i, " - ")))
idx = sapply(y, function(i) any(i %in% x))
gwas_select = gwascat[idx, ]
gwas_select
table(gwas_select$CONTEXT)
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:20]
head(gwas_select)
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
intron_gene
gwas_select[grepl("Alzheimer's disease", gwas_select$DISEASE.TRAIT), ]
x
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("Triglycerides", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED.GENE")]
gwas_select[grepl("Triglycerides", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("Adiponectin levels", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED.GENE")]
gwas_select[grepl("Adiponectin levels", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("Alzheimer's disease", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("IgG glycosylation", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("Type 2 diabetes", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
table(gwas_select$CONTEXT)
cons
sort(cons)
head(gwas)
gwasTable
gwasTable[which.min(gwasTable$P), ]
gwas = gwas4
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
gwas_genes
"LRRC8E" %in% gwas_genes
"NANOS1" %in% gwas_genes
"ZNF684" %in% gwas_genes
"GKN1" %in% gwas_genes
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
15912120 * 4
library(biomaRt)
mart = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
library(rstan)
library(reshape)
library(dplyr)
rm(list = ls())
load("~/Dropbox/GitHub/wgs/new/kin.rdt")
load("~/Dropbox/GitHub/wgs/new/mdata.rdt")
load(file = "~/Dropbox/GitHub/wgs/Manu/null.rdt")
c = c("c[1]", "c[2]", "c[3]")
beta = c("beta[1]", "beta[2]", "beta[3]", "beta[4]")
name = c("Age", "Sex", "APOE/e2", "APOE/e4")
plot(fit, show_density = T, pars = c, ci_level = 0.95)
plot(fit, show_density = T, pars = beta, ci_level = 0.95)
sample <- as.data.frame(fit)[beta]
names(sample) = name
mode <- apply(sample, 2, function(z) { dens <- density(z); dens$x[which.max(dens$y)] })
mean = colMeans(sample)
se1 = apply(sample, 2, function(xx) quantile(xx, 0.05))
se2 = apply(sample, 2, function(xx) quantile(xx, 0.95))
mean
se1
head(fit)
head(sample)
print(fit)
print(fit, pars = beta)
quantile
?quantile
as.data.frame(print(fit, pars = beta))
summary(fit, pars = beta))
summary(fit, pars = beta)
summary(fit, pars = beta)$summary
summary = summary(fit, pars = beta)$summary
summary$P = pnorm(abs(summary$mean), sd = summary$sd, lower.tail = F) * 2
summary = as.data.frame(summary(fit, pars = beta)$summary)
summary$P = pnorm(abs(summary$mean), sd = summary$sd, lower.tail = F) * 2
summary
summary$P
load("~/Dropbox/GitHub/wgs/gwas/sampling.rdt")
table1 = mcmc[mcmc$P < 1e-6, ]
ID = rownames(table1)
table1 = as.data.frame(apply(table1, 2, as.numeric))
rownames(table1) = ID
table1 = table1[order(table1$P), ]
load("/data/xwang/adsp3/meta.rdt")
head(table1)
load("~/Dropbox/GitHub/wgs/gwas/sampling.rdt")
mcmc$UID = gsub(":", "-", gsub("_.*", "", rownames(mcmc)))
load("~/Dropbox/GitHub/wgs/glm/vep.rdt")
vep$UID = gsub(":", "-", gsub("-.*", "", vep$Location))
gwas = mcmc[mcmc$P < 1e-6, ]
vep1 = vep[vep$UID %in% gwas$UID, ]
sort(table(vep1$Consequence))
sort(table(vep1$Consequence))
head(vep1)
head(vep)
vep$DISTANCE
gwas = mcmc[mcmc$P < 1e-4, ]
gwas = mcmc[mcmc$P < 1e-3, ]
head(gwas)
x = gwas[grep("19-", gwas$UID), ]
x
x[x$UID == "19-45411941", ]
x[x$UID == "19-45412079", ]
library(dplyr)
library(ggplot2)
rm(list = ls())
setwd("~/Dropbox/GitHub/wgs")
load("./Manu/table1.rdt")
gwas = table1
gwas$Sign <- as.factor(sign(gwas$mean))
gwas$Type <- "NS"
gwas$Type[1:4] <- "S"
gwas$MAF[gwas$MAF > 0.5] = 1 - gwas$MAF[gwas$MAF > 0.5]
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
guides(size = guide_legend(override.aes = list(size=10))) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
guides(size = guide_legend(override.aes = list(size=1))) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F) +
guides(size = guide_legend(override.aes = list(size=c(1, 2, 3, 4)))) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F, nrow = 10) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
guides(color = F, text = F, shape = F, ncol = 10) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
# scale_size(range = c(1, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
library(ggplot2)
p <- ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose)) +
geom_boxplot()
p
p
library(ggplot2)
p <- ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose)) +
geom_boxplot()
p <- ggplot(data = mtcars,
aes(x=mpg, y=wt, color=cyl, size=qsec, shape=gear))+
geom_point()
p
p
p <- ggplot(data = mtcars,
aes(x=mpg, y=wt, color=cyl, size=qsec)) + geom_point()
p
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = c(1, 2, 8), labels = c(1, 2, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = c(6, 7, 8), labels = c(6, 7, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8),
breaks = c(5.5, 6, 6.5, 7, 7.5, 8),
labels = c(5.5, 6, 6.5, 7, 7.5, 8)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
min(gwas$P)
max(gwas$P)
min(-log10(gwas$P))
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = c(1:9), labels = c(1:9)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
seq(1, 5)
seq(1, 5, 0.1)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.1)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.2)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.3)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank())
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.3)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F, ncol = 10) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank(),
legend.position = "top")
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.3)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank(),
legend.position = "top")
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 3)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.2)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank(),
legend.position = "top")
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 6)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.2)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
legend.key = element_blank(),
legend.position = "top")
dev.off()
pdf("./Manu/top2.pdf", width = 7, height = 4)
ggplot(gwas, aes(x = MAF, y = abs(mean))) +
geom_point(data = gwas[1:4, ], colour="green", aes(size = -log10(P)), shape = 1) +
# geom_point(aes(colour = Sign, size = -log10(P), shape = Type), alpha = 0.8) +
geom_point(aes(colour = Sign, size = -log10(P)), alpha = 0.7) +
scale_size(range = c(1, 8), breaks = seq(6, 9, 0.2)) +
theme_bw() + xlab("MAF") + ylab("Absolute Effect Size") +
guides(color = F, text = F, shape = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.text = element_text(size = 15),
axis.title= element_text(size = 15),
legend.text = element_text(size = 15),
#       legend.position = "top",
legend.key = element_blank())
dev.off()
